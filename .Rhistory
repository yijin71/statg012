stop("The number of successes r should not larger than trials n")
}
if (alpha <= 0 | beta <= 0) {
stop("The parameters of beta distribution should be larger than zero")
}
#############################################################################
# formula: slides 2 example 3.6 (p.45)
prior <- stats::dbeta(theta, alpha, beta, log = FALSE)
likelihood <- stats::dbinom(r, n, prob = theta, log = FALSE)
pos.alpha <- alpha + r
pos.beta <- beta + n-r
posterior <- stats::dbeta(theta, pos.alpha, pos.beta)
##############################################################################
# results
res <- list(    prior = prior,
likelihood = likelihood,
posterior = posterior,
theta = theta,
pri.alpha = alpha,
pri.beta = beta,
pos.alpha = pos.alpha,
pos.beta = pos.beta)
class(res) <- "g12post"
invisible(res)
}
#############################################################################
#summary of the statistics
#' Summarizing binomial sampling distribution with a beta distribution of
#' prior
#'
#' A function used to produce summaries of prior and poesterior distribution,
#' based on binomial sampling distribution with a beta distribution of prior.
#'
#' @param objects an object of class "\code{g12binbeta}", usually, a result of a call
#' to \code{\link{binbeta}}.
#' @param ... further arguments from other methods
#' @return the function \code{summary.binbeta} returns a list of summary
#' statistics of prior and posterior distribution, repectively.
#' @export
summary.binbeta <- function(objects, ...) {
res <- objects
##statistics of prior function
pri.alpha <- res$pri.alpha
pri.beta <- res$pri.beta
pri.mean <- pri.alpha / (pri.alpha+pri.beta)
pri.var <- (pri.alpha * pri.beta) /
((pri.alpha + pri.beta) ^ 2 * (pri.alpha + pri.beta +1))
pri.std <- sqrt(pri.var)
pri.mode <- (pri.alpha - 1) / (pri.alpha + pri.beta - 2)
prob <- c(0.0500, 0.2500, 0.5000, 0.7500, 0.9500)
pri.qtl <- stats::qbeta(prob, pri.alpha, pri.beta)
cat(paste("Prior Mean           : ",round(pri.mean, 5), "\n"))
cat(paste("Prior Variance       : ",round(pri.var, 5), "\n"))
cat(paste("Prior Std. Deviation : ",round(pri.std, 5), "\n"))
cat(paste("Prior Mode           : ",round(pri.mode, 5), "\n"))
cat("quantiles:", round(prob, 5), "\n")
cat("\t", round(pri.qtl, 5), "\n")
##statistics of posterior function
pos.alpha <- res$pos.alpha
pos.beta <- res$pos.beta
pos.mean <- pos.alpha/ (pos.alpha + pos.beta)
pos.var <- (pos.alpha * pos.beta) /
((pos.alpha + pos.beta) ^ 2 * (pos.alpha + pos.beta +1))
pos.std <- sqrt(pos.var)
pos.mode <-
if (pos.alpha > 1 & pos.beta > 1) {
pos.mode <- (pos.alpha - 1) / (pos.alpha + pos.beta - 2)
} else {
"The mode only can be calculated when both parameters are larger than 1"
}
prob <- c(0.0500, 0.2500, 0.5000, 0.7500, 0.9500)
pos.qtl <- stats::qbeta(prob, pos.alpha, pos.beta)
cat(paste("Posterior Mean           : ",round(pos.mean, 5), "\n"))
cat(paste("Posterior Variance       : ",round(pos.var, 5), "\n"))
cat(paste("Posterior Std. Deviation : ",round(pos.std, 5), "\n"))
cat(paste("Posterior Mode           : ",round(pos.mode, 5), "\n"))
cat("quantiles:", round(prob, 5), "\n")
cat("\t", round(pos.qtl, 5), "\n")
######################################################################
results <- list (prior.variance = pri.var,
prior.std.deviation = pri.std,
prior.mode = pri.mode,
prior.quantiles = pri.qtl,
posteror.mean = pos.mean,
posteror.variance = pos.var,
posteror.std.deviation = pos.std,
posteror.mode = pos.mode,
posteror.quantiles = pos.qtl)
class(results) <- "summary.g12post"
invisible(results)
}
binbeta(y)
binbeta(y)
y
#' Binomial sampling distribution with a beta distribution of prior
#'
#'Define the posterior distribution function for \eqn{\pi ( \theta | r )}, with
#'a beta prior distribution \eqn{\pi ( \theta; a, b )} and a binomial sampling
#'distribution \eqn{p ( r | \theta )}.
#'
#'@param n the number of trials in binomial distribution.
#'@param r the number of successes in n trials.
#'@param alpha parameter for the beta distribution ( \eqn{\ge 0} ).
#'@param beta parameter for the beta distribution ( \eqn{\ge 0} ).
#'@param \eqn{\theta} the range of the probability of success.
#'@return An object of class "\code{binbeta}" is returned.
#'\item{prior}{the prior distribution, i.e.
#' the \eqn{beta(\alpha,\beta)} distribution} \item{likelihood}{the likelihood
#' function of r given \eqn{\theta}, i.e. the
#' \eqn{binomial(n,r)} distribution} \item{posterior}{the
#' posterior distribution of \eqn{\theta} given r, i.e. the
#' \eqn{beta(\alpha+r, \beta+n-r)} distribution} \item{theta}{the
#' range of the probability of success} \item{pri.alpha}{the
#' alpha parameter for the beta distribution of prior} \item{pri.beta}{the
#' beta parameter for the beta distribution of prior} \item{pos.alpha}{the
#' alpha parameter for the beta distribution of posterior} \item{pos.beta}{the
#' beta parameter for the beta distribution of posterior}
#'@seealso \code{\link{summary.binbeta}} will return summararies of prior
#'and posterior distribution.
#'@examples
#'## simplest one with 3 successes in 10 trials and a uniform beta(1,1) prior
#'binbeta(6, 2)
#'
#'## example 3.6 : 3 successes in 10 trials and a beta(4,6) prior
#'binbeta(4, 6, 10, 3)
#'
#'@export
binbeta <- function(x, theta = seq(0,1,0.001)) {
alpha <- x[1]
beta <- x[2]
n <- x[3]
r <- x[4]
#############################################################################
#n: no. of  binomial trials
#r: no. of successes in n trials (0<= r<= n)
#alpha, beta: are parameters of beta distribution of prior ( >0)
#theta: the range of the probability of success
if (n < 0) {
stop("The number of trials n should not smaller than zero")
}
if (n < r) {
stop("The number of successes r should not larger than trials n")
}
if (alpha <= 0 | beta <= 0) {
stop("The parameters of beta distribution should be larger than zero")
}
#############################################################################
# formula: slides 2 example 3.6 (p.45)
prior <- stats::dbeta(theta, alpha, beta, log = FALSE)
likelihood <- stats::dbinom(r, n, prob = theta, log = FALSE)
pos.alpha <- alpha + r
pos.beta <- beta + n-r
posterior <- stats::dbeta(theta, pos.alpha, pos.beta)
##############################################################################
# results
res <- list(    prior = prior,
likelihood = likelihood,
posterior = posterior,
theta = theta,
pri.alpha = alpha,
pri.beta = beta,
pos.alpha = pos.alpha,
pos.beta = pos.beta)
class(res) <- "g12post"
invisible(res)
}
#############################################################################
#summary of the statistics
#' Summarizing binomial sampling distribution with a beta distribution of
#' prior
#'
#' A function used to produce summaries of prior and poesterior distribution,
#' based on binomial sampling distribution with a beta distribution of prior.
#'
#' @param objects an object of class "\code{g12binbeta}", usually, a result of a call
#' to \code{\link{binbeta}}.
#' @param ... further arguments from other methods
#' @return the function \code{summary.binbeta} returns a list of summary
#' statistics of prior and posterior distribution, repectively.
#' @export
summary.binbeta <- function(objects, ...) {
res <- objects
##statistics of prior function
pri.alpha <- res$pri.alpha
pri.beta <- res$pri.beta
pri.mean <- pri.alpha / (pri.alpha+pri.beta)
pri.var <- (pri.alpha * pri.beta) /
((pri.alpha + pri.beta) ^ 2 * (pri.alpha + pri.beta +1))
pri.std <- sqrt(pri.var)
pri.mode <- (pri.alpha - 1) / (pri.alpha + pri.beta - 2)
prob <- c(0.0500, 0.2500, 0.5000, 0.7500, 0.9500)
pri.qtl <- stats::qbeta(prob, pri.alpha, pri.beta)
cat(paste("Prior Mean           : ",round(pri.mean, 5), "\n"))
cat(paste("Prior Variance       : ",round(pri.var, 5), "\n"))
cat(paste("Prior Std. Deviation : ",round(pri.std, 5), "\n"))
cat(paste("Prior Mode           : ",round(pri.mode, 5), "\n"))
cat("quantiles:", round(prob, 5), "\n")
cat("\t", round(pri.qtl, 5), "\n")
##statistics of posterior function
pos.alpha <- res$pos.alpha
pos.beta <- res$pos.beta
pos.mean <- pos.alpha/ (pos.alpha + pos.beta)
pos.var <- (pos.alpha * pos.beta) /
((pos.alpha + pos.beta) ^ 2 * (pos.alpha + pos.beta +1))
pos.std <- sqrt(pos.var)
pos.mode <-
if (pos.alpha > 1 & pos.beta > 1) {
pos.mode <- (pos.alpha - 1) / (pos.alpha + pos.beta - 2)
} else {
"The mode only can be calculated when both parameters are larger than 1"
}
prob <- c(0.0500, 0.2500, 0.5000, 0.7500, 0.9500)
pos.qtl <- stats::qbeta(prob, pos.alpha, pos.beta)
cat(paste("Posterior Mean           : ",round(pos.mean, 5), "\n"))
cat(paste("Posterior Variance       : ",round(pos.var, 5), "\n"))
cat(paste("Posterior Std. Deviation : ",round(pos.std, 5), "\n"))
cat(paste("Posterior Mode           : ",round(pos.mode, 5), "\n"))
cat("quantiles:", round(prob, 5), "\n")
cat("\t", round(pos.qtl, 5), "\n")
######################################################################
results <- list (prior.variance = pri.var,
prior.std.deviation = pri.std,
prior.mode = pri.mode,
prior.quantiles = pri.qtl,
posteror.mean = pos.mean,
posteror.variance = pos.var,
posteror.std.deviation = pos.std,
posteror.mode = pos.mode,
posteror.quantiles = pos.qtl)
class(results) <- "summary.g12post"
invisible(results)
}
binbeta(y)
a <- binbeta(y)
a
library(statg012)
aa <- binbeta(y)
aa
objects(aa)
pos2 <- function(y, type) {
switch (type,
bb = binbeta(y),
pg = poigamma(y)
)
}
pos2 <- (y, "bb")
pos2 <-(y,"bb")
pos2 <-(y, "bb")
pos2(y)
pos2(y, "bb")
aaaa <- pos2(y, "bb")
aaaa
library(statg012)
binbeta(4,6,10,3)
library(statg012)
#' Binomial sampling distribution with a beta distribution of prior
#'
#'Define the posterior distribution function for \eqn{\pi ( \theta | r )}, with
#'a beta prior distribution \eqn{\pi ( \theta; a, b )} and a binomial sampling
#'distribution \eqn{p ( r | \theta )}.
#'
#'@param n the number of trials in binomial distribution.
#'@param r the number of successes in n trials.
#'@param alpha parameter for the beta distribution ( \eqn{\ge 0} ).
#'@param beta parameter for the beta distribution ( \eqn{\ge 0} ).
#'@param \eqn{\theta} the range of the probability of success.
#'@return An object of class "\code{binbeta}" is returned.
#'\item{prior}{the prior distribution, i.e.
#' the \eqn{beta(\alpha,\beta)} distribution} \item{likelihood}{the likelihood
#' function of r given \eqn{\theta}, i.e. the
#' \eqn{binomial(n,r)} distribution} \item{posterior}{the
#' posterior distribution of \eqn{\theta} given r, i.e. the
#' \eqn{beta(\alpha+r, \beta+n-r)} distribution} \item{theta}{the
#' range of the probability of success} \item{pri.alpha}{the
#' alpha parameter for the beta distribution of prior} \item{pri.beta}{the
#' beta parameter for the beta distribution of prior} \item{pos.alpha}{the
#' alpha parameter for the beta distribution of posterior} \item{pos.beta}{the
#' beta parameter for the beta distribution of posterior}
#'@seealso \code{\link{summary.binbeta}} will return summararies of prior
#'and posterior distribution.
#'@examples
#'## simplest one with 3 successes in 10 trials and a uniform beta(1,1) prior
#'binbeta(6, 2)
#'
#'## example 3.6 : 3 successes in 10 trials and a beta(4,6) prior
#'binbeta(4, 6, 10, 3)
#'
#'@export
binbeta <- function(alpha, beta, n, r, theta = seq(0,1,0.001)) {
#############################################################################
#n: no. of  binomial trials
#r: no. of successes in n trials (0<= r<= n)
#alpha, beta: are parameters of beta distribution of prior ( >0)
#theta: the range of the probability of success
if (n < 0) {
stop("The number of trials n should not smaller than zero")
}
if (n < r) {
stop("The number of successes r should not larger than trials n")
}
if (alpha <= 0 | beta <= 0) {
stop("The parameters of beta distribution should be larger than zero")
}
#############################################################################
# formula: slides 2 example 3.6 (p.45)
prior <- stats::dbeta(theta, alpha, beta, log = FALSE)
likelihood <- stats::dbinom(r, n, prob = theta, log = FALSE)
pos.alpha <- alpha + r
pos.beta <- beta + n-r
posterior <- stats::dbeta(theta, pos.alpha, pos.beta)
##############################################################################
# results
res <- list(    prior = prior,
likelihood = likelihood,
posterior = posterior,
theta = theta,
pri.alpha = alpha,
pri.beta = beta,
pos.alpha = pos.alpha,
pos.beta = pos.beta)
class(res) <- "g12post"
invisible(res)
}
#############################################################################
#summary of the statistics
#' Summarizing binomial sampling distribution with a beta distribution of
#' prior
#'
#' A function used to produce summaries of prior and poesterior distribution,
#' based on binomial sampling distribution with a beta distribution of prior.
#'
#' @param objects an object of class "\code{g12binbeta}", usually, a result of a call
#' to \code{\link{binbeta}}.
#' @param ... further arguments from other methods
#' @return the function \code{summary.binbeta} returns a list of summary
#' statistics of prior and posterior distribution, repectively.
#' @export
summary.binbeta <- function(objects, ...) {
res <- objects
##statistics of prior function
pri.alpha <- res$pri.alpha
pri.beta <- res$pri.beta
pri.mean <- pri.alpha / (pri.alpha+pri.beta)
pri.var <- (pri.alpha * pri.beta) /
((pri.alpha + pri.beta) ^ 2 * (pri.alpha + pri.beta +1))
pri.std <- sqrt(pri.var)
pri.mode <- (pri.alpha - 1) / (pri.alpha + pri.beta - 2)
prob <- c(0.0500, 0.2500, 0.5000, 0.7500, 0.9500)
pri.qtl <- stats::qbeta(prob, pri.alpha, pri.beta)
cat(paste("Prior Mean           : ",round(pri.mean, 5), "\n"))
cat(paste("Prior Variance       : ",round(pri.var, 5), "\n"))
cat(paste("Prior Std. Deviation : ",round(pri.std, 5), "\n"))
cat(paste("Prior Mode           : ",round(pri.mode, 5), "\n"))
cat("quantiles:", round(prob, 5), "\n")
cat("\t", round(pri.qtl, 5), "\n")
##statistics of posterior function
pos.alpha <- res$pos.alpha
pos.beta <- res$pos.beta
pos.mean <- pos.alpha/ (pos.alpha + pos.beta)
pos.var <- (pos.alpha * pos.beta) /
((pos.alpha + pos.beta) ^ 2 * (pos.alpha + pos.beta +1))
pos.std <- sqrt(pos.var)
pos.mode <-
if (pos.alpha > 1 & pos.beta > 1) {
pos.mode <- (pos.alpha - 1) / (pos.alpha + pos.beta - 2)
} else {
"The mode only can be calculated when both parameters are larger than 1"
}
prob <- c(0.0500, 0.2500, 0.5000, 0.7500, 0.9500)
pos.qtl <- stats::qbeta(prob, pos.alpha, pos.beta)
cat(paste("Posterior Mean           : ",round(pos.mean, 5), "\n"))
cat(paste("Posterior Variance       : ",round(pos.var, 5), "\n"))
cat(paste("Posterior Std. Deviation : ",round(pos.std, 5), "\n"))
cat(paste("Posterior Mode           : ",round(pos.mode, 5), "\n"))
cat("quantiles:", round(prob, 5), "\n")
cat("\t", round(pos.qtl, 5), "\n")
######################################################################
results <- list (prior.variance = pri.var,
prior.std.deviation = pri.std,
prior.mode = pri.mode,
prior.quantiles = pri.qtl,
posteror.mean = pos.mean,
posteror.variance = pos.var,
posteror.std.deviation = pos.std,
posteror.mode = pos.mode,
posteror.quantiles = pos.qtl)
class(results) <- "summary.g12post"
invisible(results)
}
binbeta(4,6,10,3)
library(statg012)
load_all()
devtools::load_all()
library(statg012)
library(statg012)
library(statg012)
x<- rnorm(100)
y <- runif(100)
plot.g12post(x,y,model="binbeta")
a <- binbeta(4,6,10,3)
plot(a)
a <- binbeta(4,6,10,3)
a <- binbeta(4,6,10,3)
plot(a)
a
library(statg012)
library(statg012)
library(statg012)
library(statg012)
binbeta(6,2)
binbeta(1,1,6,2)
binbeta(n=10,r=3)
binbeta(n=6,r=2)
binbeta(6,2)
binbeta(1, 1, 6, 2)
library(statg012)
library(statg012)
binbeta(4,6,10,3)
a <- binbeta(4,6,10,3)
a
library(statg012)
a <- binbeta(4,6,10,3)
a
summary.binbeta()
library(statg012)
summary.binbeta(a)
library(statg012)
library(statg012)
devtools::document()
?plot
?matplot
library(statg012)
library(statg012)
library(statg012)
library(statg012)
a <- binbeta(4,6,10,3)
a
plot(a)
plot(theta, a$prior)
plot(a$theta, a$prior)
?plot
?matplot
library(statg012)
library(statg012)
summary.g12post <- function(objects, ...) {
library(statg012)
library(statg012)
library(statg012)
library(statg012)
library(statg012)
library(statg012)
summary_g12post(a)
a
library(statg012)
plot_g12post(a)
plot_g12post(a, model = "binbeta")
library(statg012)
a <- binbeta(4,6,10,3)
summary_g12post(a)
IS(binbeta)
Is(binbeta)
Is(binbeta(4,6,10,3))
objects(binbeta(4,6,10,3))
a
library(statg012)
a
a <- binbeta(4,6,10,3)
a
a$prir
a$prior
library(statg012)
a <- binbeta(4,6,10,3)
library(statg012)
a <- binbeta(4,6,10,3)
a
plot_g12post(a, model = "binbeta")
library(statg012)
a <- binbeta(4,6,10,3)
plot_g12post(a, model = "binbeta")
library(statg012)
a <- binbeta(4,6,10,3)
a
binbeta(4,6,10,3)
summary.g12post <- function(objects, ...) {
library(statg012)
library(statg012)
library(statg012)
a <- binbeta(4,6,10,3)
summary_g12post(a)
library(statg012)
summary(a)
b <- binbeta(1,1,10,3)
summary(a)
summary(b)
summary.g12post(a)
summary.g12post(b)
library(statg012)
library(statg012)
library(statg012)
plot(a, model = "binbeta")
plot.g12post(a, model = "binbeta")
summary(binbeta(4,6,10,3))
?statg002
?statg023
?stat2003
??stat2003
??stat1004
install.packages("stat1004")
??stat1004
install.packages("stat1004")
?lm
?binbeta
