res <- x
mu <- res$mu
mu.prior <- res$mu.prior
tau <- res$tau
tau.prior <-res$tau.prior
prior <- res$prior
posterior <- res$posterior
x <- cbind(mu, mu, mu)
x <- mu
y <- cbind(mu.prior, prior, posterior)
xx <- cbind(tau,tau,tau)
xx <- tau
yy <- cbind(tau.prior, prior, posterior)
par(mfrow=c(3,1))
#
leg_pos <- match.arg(leg_pos)
user_args <- list(...)
#
my_matplot <- function(xx, yy, lty = 1:3, col = 1, type = "l",
xlab = "mu",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len, nlevels, levels, labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend <- function(pos, lty = 1:3, lwd = 1, col = 1,
legend = c("mu.prior","prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type, nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
my_matplot2 <- function(xx, yy, lty = 1:3, col = 1, type = "l",
xlab = "tau",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len,nlevels, levels, labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend2 <- function(pos, lty = 1:3, lwd = 1, col = 1,
legend = c("tau.prior","prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type,nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
contour <- function(x,y,z, xlab = "mu", ylab="tau",..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len,lend, xlim, ylim, add, verbose, type){
graphics::contour(x, y, z, xlab = xlab, ylab = ylab,...)
}
my_legend3 <- function(pos, lty = 1, lwd = 1, col = 1,
legend = c("prior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type,nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
my_matplot(x, y, ...)
my_legend(leg_pos, ...)
my_matplot2(xx, yy, ...)
my_legend2(leg_pos, ...)
contour(mu, tau, outer(mu.prior,tau.prior),...)
my_legend3(leg_pos, ...)
}
plot.normal(a)
#'plot of normal
#'
#'plot of normal
#'@export plot.normal
plot.normal <- function (x, y, leg_pos = c("topright", "bottomright",
"bottom", "bottomleft",
"left", "topleft",
"top", "right", "center"),...) {
if(lenth(x) > 8) {
res <- x
mu <- res$mu
mu.prior <- res$mu.prior
tau <- res$tau
tau.prior <-res$tau.prior
prior <- res$prior
posterior <- res$posterior
x <- cbind(mu, mu, mu)
x <- mu
y <- cbind(mu.prior, prior, posterior)
xx <- cbind(tau,tau,tau)
xx <- tau
yy <- cbind(tau.prior, prior, posterior)
par(mfrow=c(3,1))
#
leg_pos <- match.arg(leg_pos)
user_args <- list(...)
#
my_matplot <- function(xx, yy, lty = 1:3, col = 1, type = "l",
xlab = "mu",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len, nlevels, levels, labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend <- function(pos, lty = 1:3, lwd = 1, col = 1,
legend = c("mu.prior","prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type, nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
my_matplot2 <- function(xx, yy, lty = 1:3, col = 1, type = "l",
xlab = "tau",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len,nlevels, levels, labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend2 <- function(pos, lty = 1:3, lwd = 1, col = 1,
legend = c("tau.prior","prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type,nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
contour <- function(x,y,z, xlab = "mu", ylab="tau",..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len,lend, xlim, ylim, add, verbose, type){
graphics::contour(x, y, z, xlab = xlab, ylab = ylab,...)
}
my_legend3 <- function(pos, lty = 1, lwd = 1, col = 1,
legend = c("prior contour"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type,nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
my_matplot(x, y, ...)
my_legend(leg_pos, ...)
my_matplot2(xx, yy, ...)
my_legend2(leg_pos, ...)
contour(mu, tau, outer(mu.prior,tau.prior),...)
my_legend3(leg_pos, ...)
} else {
res <- x
mu.prior <- res$prior
posterior <- res$posterior
mu <- res$mu
x <- cbind(mu, mu)
x <- mu
y <- cbind(mu.prior, posterior)
#
leg_pos <- match.arg(leg_pos)
user_args <- list(...)
#
my_matplot <- function(xx, yy, lty = 1:2, col = 1, type = "l",
xlab = "mu",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend <- function(pos, lty = 1:2, lwd = 1, col = 1,
legend = c("mu.prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
my_matplot(x, y, ...)
my_legend(leg_pos, ...)
}
}
plot.noraml(a)
plot.normal(a)
#'plot of normal
#'
#'plot of normal
#'@export plot.normal
plot.normal <- function (x, y, leg_pos = c("topright", "bottomright",
"bottom", "bottomleft",
"left", "topleft",
"top", "right", "center"),...) {
if(length(x) > 8) {
res <- x
mu <- res$mu
mu.prior <- res$mu.prior
tau <- res$tau
tau.prior <-res$tau.prior
prior <- res$prior
posterior <- res$posterior
x <- cbind(mu, mu, mu)
x <- mu
y <- cbind(mu.prior, prior, posterior)
xx <- cbind(tau,tau,tau)
xx <- tau
yy <- cbind(tau.prior, prior, posterior)
par(mfrow=c(3,1))
#
leg_pos <- match.arg(leg_pos)
user_args <- list(...)
#
my_matplot <- function(xx, yy, lty = 1:3, col = 1, type = "l",
xlab = "mu",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len, nlevels, levels, labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend <- function(pos, lty = 1:3, lwd = 1, col = 1,
legend = c("mu.prior","prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type, nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
my_matplot2 <- function(xx, yy, lty = 1:3, col = 1, type = "l",
xlab = "tau",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len,nlevels, levels, labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend2 <- function(pos, lty = 1:3, lwd = 1, col = 1,
legend = c("tau.prior","prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type,nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
contour <- function(x,y,z, xlab = "mu", ylab="tau",..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len,lend, xlim, ylim, add, verbose, type){
graphics::contour(x, y, z, xlab = xlab, ylab = ylab,...)
}
my_legend3 <- function(pos, lty = 1, lwd = 1, col = 1,
legend = c("prior contour"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type,nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
my_matplot(x, y, ...)
my_legend(leg_pos, ...)
my_matplot2(xx, yy, ...)
my_legend2(leg_pos, ...)
contour(mu, tau, outer(mu.prior,tau.prior),...)
my_legend3(leg_pos, ...)
} else {
res <- x
mu.prior <- res$prior
posterior <- res$posterior
mu <- res$mu
x <- cbind(mu, mu)
x <- mu
y <- cbind(mu.prior, posterior)
#
leg_pos <- match.arg(leg_pos)
user_args <- list(...)
#
my_matplot <- function(xx, yy, lty = 1:2, col = 1, type = "l",
xlab = "mu",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend <- function(pos, lty = 1:2, lwd = 1, col = 1,
legend = c("mu.prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
my_matplot(x, y, ...)
my_legend(leg_pos, ...)
}
}
plot.normal(a)
b <- normal(xx, m = 25, s = sqrt(10), sigma = 2)
plot.normal(b)
#'plot of normal
#'
#'plot of normal
#'@export plot.normal
plot.normal <- function (x, y, leg_pos = c("topright", "bottomright",
"bottom", "bottomleft",
"left", "topleft",
"top", "right", "center"),...) {
if(length(x) > 8) {
res <- x
mu <- res$mu
mu.prior <- res$mu.prior
tau <- res$tau
tau.prior <-res$tau.prior
prior <- res$prior
posterior <- res$posterior
x <- cbind(mu, mu, mu)
x <- mu
y <- cbind(mu.prior, prior, posterior)
xx <- cbind(tau,tau,tau)
xx <- tau
yy <- cbind(tau.prior, prior, posterior)
#
leg_pos <- match.arg(leg_pos)
user_args <- list(...)
#
my_matplot <- function(xx, yy, lty = 1:3, col = 1, type = "l",
xlab = "mu",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len, nlevels, levels, labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend <- function(pos, lty = 1:3, lwd = 1, col = 1,
legend = c("mu.prior","prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type, nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
my_matplot2 <- function(xx, yy, lty = 1:3, col = 1, type = "l",
xlab = "tau",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len,nlevels, levels, labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend2 <- function(pos, lty = 1:3, lwd = 1, col = 1,
legend = c("tau.prior","prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type,nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
contour <- function(x,y,z, xlab = "mu", ylab="tau",..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len,lend, xlim, ylim, add, verbose, type){
graphics::contour(x, y, z, xlab = xlab, ylab = ylab,...)
}
my_legend3 <- function(pos, lty = 1, lwd = 1, col = 1,
legend = c("prior contour"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type,nlevels, levels,
labels, labcex, drawlabels,
method, vfont, frame.plot, zlim) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
par(mfrow=c(3,1))
my_matplot(x, y, ...)
my_legend(leg_pos, ...)
my_matplot2(xx, yy, ...)
my_legend2(leg_pos, ...)
contour(mu, tau, outer(mu.prior,tau.prior),...)
my_legend3(leg_pos, ...)
} else {
res <- x
mu.prior <- res$prior
posterior <- res$posterior
mu <- res$mu
x <- cbind(mu, mu)
x <- mu
y <- cbind(mu.prior, posterior)
#
leg_pos <- match.arg(leg_pos)
user_args <- list(...)
#
my_matplot <- function(xx, yy, lty = 1:2, col = 1, type = "l",
xlab = "mu",ylab = "density", ..., legend, fill,
border, angle, density, box.lwd, box.lty, box.col,
pt.bg, pt.cex, pt.lwd, xjust, yjust, x.intersp,
y.intersp, adj, text.width, text.col, text.font,
merge, trace, ncol, horiz, inset, title.col,
title.adj, seg.len) {
graphics::matplot(xx, yy, col = col, xlab = xlab, ylab = ylab,
type = type, lty = lty, ...)
}
my_legend <- function(pos, lty = 1:2, lwd = 1, col = 1,
legend = c("mu.prior", "posterior"), ..., xlab, ylab,
lend, xlim, ylim, add, verbose, type) {
graphics::legend(pos, lty = lty, lwd = lwd, col = col, legend = legend,
...)
}
par(mfrow= c(1,1))
my_matplot(x, y, ...)
my_legend(leg_pos, ...)
}
}
plot.normal(b)
x <- c(1,2,...,4)
posterior <- function(model= "",...) {
if ( model == "binbeta") {
res <- binbeta(a, b, c, d)
}
if ( model == "poigamma" ) {
res <- poigamma(a, b, c, d)
}
if ( model == "gamma"){
res <- gamma(a, b, c, d)
}
if (model == "normal"){
res <- rnorm(a, b, c, d)
}
return(res)
}
posterior(model = "binbeta", 4,1,10,3)
posterior(model = "binbeta", a = 4, b= 1,c =10,d = 3)
x<- c(1:5)
x
x<-[]
x<-zeros
x<-zeros()
x<-seq(10)
x
pos <- function(a,b, c,d,..., model="", n){
if (n > 4){
res <-  normal(x = a, m = b , s = c, alpha = d, beta = ... )
}
if (n == 4) {
res <- binbeta(a, b, c, d)
}
return(res)
}
pos <- function(a,b, c,d,..., n){
if (n > 4){
res <-  normal(x = a, m = b , s = c, alpha = d, beta = ... )
}
if (n == 4) {
res <- binbeta(a, b, c, d)
}
return(res)
}
pos(4,2,10,3,4)
pos(4,2,10,3, n = 4)
pos(4,2,10,3,5, n = 5)
pos <- function(a, b, c, d,..., n = 4, model = ""){
if (n > 4 & model == "binbeta") {
res <- binbeta(alpha = a, beta = b, n = c, r = d, theta = seq(0, ..., 0.01))
}
if (n > 4 & model == "gamma") {
res <- gamma(t = a, a =b, shape = c, rate = d, scale = ...)
}
if (n > 4 & model == "normal") {
res <-  normal(x = a, m = b , s = c, alpha = d, beta = ... )
}
return(res)
}
a <-pos(4,2,10,1,2)
a <-pos(4,2,10,1,2, n =5, model = "binbeta")
a <-pos(4,2,10,1,0.2)
a <-pos(4,2,10,1,0.9, n =5, model = "binbeta")
a <-pos(4,2,10,1,0.5, n =5, model = "binbeta")
binbeta(4,2,10,1,theta = seq(0.0.5,0.01))
binbeta(4,2,10,1,theta = seq(0,0.5,0.01))
library(statg012)
library(statg012)
library(statg012)
